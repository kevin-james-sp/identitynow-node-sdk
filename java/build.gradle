apply plugin: 'java'
apply plugin: 'maven'

group = 'com.sailpoint.idn-services'
version = '0.0.2'

description = "identitynow-services-sdk"

configurations{
	deployer
}

project.uploadArchives{
	repositories {
		mavenDeployer{
			configuration = configurations.deployer
			repository(url: "s3://sptcbu-mvn-repo/snapshot")
		}
	}
}

// Support a gradle task of 'testJar' that builds the .jar with the test classes included.
task testJar(type: Jar) {
	classifier = 'tests'
	from sourceSets.test.output.classesDirs
}

// Support a gradle task of 'execute' that runs test class without building jar file
task execute(type: JavaExec) {
	systemProperties = System.getProperties()
	if(systemProperties.get('testClass') == null){
		return;
	}
	main = testClass
	classpath = sourceSets.test.runtimeClasspath
}

jar {
	manifest {
		attributes 'Main-Class': 'sailpoint.services.idn.console.EnvironmentReport'
	}
	// Include the dependy jars in our .jar file output.  This is building
	// a 'fat jar' per se; carrying all its dependencies with it.
	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		jcenter()

		maven {
			url "http://repo.maven.apache.org/maven2"
		}

		maven{
			name "snapshot"
			url "http://sptchu-mvn-repo.s3-website-us-east-1.amazonaws.com/snapshot"
		}
	}

	dependencies {

		compile group: 'com.squareup.okhttp3',     name: 'okhttp',               version:'3.10.0'
		compile group: 'com.squareup.okhttp3',     name: 'okhttp-urlconnection', version: '3.10.0'
		compile group: 'com.squareup.okhttp3',     name: 'logging-interceptor',  version: '3.10.0'

		compile group: 'com.squareup.retrofit2',   name: 'retrofit',             version:'2.4.0'
		compile group: 'com.squareup.retrofit2',   name: 'converter-gson',       version:'2.4.0'

		compile group: 'com.google.code.gson',     name: 'gson',                 version:'2.8.0'

		compile group: 'org.apache.commons',       name: 'commons-io',           version:'1.3.2'
		compile group: 'commons-codec',            name: 'commons-codec',        version: '1.5'
		compile group: 'org.apache.logging.log4j', name: 'log4j-api',            version:'2.11.0'
		compile group: 'org.apache.logging.log4j', name: 'log4j-core',           version:'2.11.0'

		compile group: 'org.jsoup',                name: 'jsoup',                version: '1.11.3'

		testCompile group: 'com.amazonaws',        name: 'aws-java-sdk-lambda',  version: '1.11.228'
		testCompile group: 'junit',                name: 'junit',                version: '4.12'

		deployer 'com.allogy.maven.wagon:maven-s3-wagon:1.1.0'
	}

	test {
		// Output test logging through the log4j 2 logging manager; for some reason this doesn't work.
		// systemProperty 'java.util.logging.manager', 'org.apache.logging.log4j.jul.LogManager'

	}
